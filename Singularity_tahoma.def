Bootstrap: docker
From: nvidia/cuda:11.1.1-cudnn8-runtime-ubuntu18.04
Stage: spython-base

#%files
#. /app/alphafold
%post
# Copyright 2021 DeepMind Technologies Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file  except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
%post
#
#https://sylabs.io/guides/3.6/user-guide/mpi.html
CUDA=11.1.1
SINGULARITY_CUDA=11.1.1
CUDA_V1=11
CUDA_V2=1
CUDA_V3=1
# FROM directive resets ARGS, so we specify again (the value is retained if
# previously set).


 apt-get update \
&& DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
build-essential \
cmake \
cuda-command-line-tools-11-1  \
hmmer \
kalign \
tzdata \
wget \
&& rm -rf /var/lib/apt/lists/* \
&& apt-get autoremove -y \
&& apt-get clean \
&& mkdir -p /app  \
&& rm -rf /app/alphafold \
&& wget -q https://github.com/deepmind/alphafold/tarball/v2.2.4 -O - | tar -xz --directory /app  \
&& ln  -sf /app/deepmind-alphafold-* /app/alphafold \
&& chmod a+rx /app/alphafold/run_alphafold.py \
&& rm -rf /tmp/hh-suite  \
&& wget -q https://github.com/soedinglab/hh-suite/tarball/v3.3.0  -O - | tar -xz --directory /tmp \
&& ln -sf /tmp/soedinglab-hh-suite-* /tmp/hh-suite \
&& mkdir /tmp/hh-suite/build \
&& cd /tmp/hh-suite/build \
&& cmake -DCMAKE_INSTALL_PREFIX=/opt/hhsuite .. \
&& make -j 4 && make install \
&& ln -s /opt/hhsuite/bin/* /usr/bin \
&& rm -rf /tmp/hh-suite \
&& cd /tmp  \
&& wget -q -P /tmp \
https://repo.anaconda.com/miniconda/Miniconda3-py37_4.12.0-Linux-x86_64.sh \
&& bash /tmp/Miniconda3-py37_4.12.0-Linux-x86_64.sh -b -p /opt/conda \
&& rm /tmp/Miniconda3-py37_4.12.0-Linux-x86_64.sh \
&& export PATH="/opt/conda/bin:$PATH" \
&& conda install -qy conda==4.13.0 \
&& conda install -y -c conda-forge \
openmm=7.5.1 \
cudatoolkit==${CUDA_VERSION} \
pdbfixer \
pip \
python=3.7 \
&& conda clean --all --force-pkgs-dirs --yes \
&& find /opt/conda/ -follow -type f -name '*.a' -delete \
&& find /opt/conda/ -follow -type f -name '*.pyc' -delete \
&& find /opt/conda/ -follow -type f -name '*.js.map' -delete \
&& echo 'conda size' `du -sh /opt/conda ` \
&& wget -q -P /app/alphafold/alphafold/common/ \
https://git.scicore.unibas.ch/schwede/openstructure/-/raw/7102c63615b64735c4941278d92b554ec94415f8/modules/mol/alg/src/stereo_chemical_props.txt \
&& python -m pip install --upgrade pip --no-cache-dir \
&& python -m pip install -r /app/alphafold/requirements.txt --no-cache-dir \
&& python -m pip  install --upgrade --no-cache-dir \
jax==0.3.17 \
jaxlib==0.3.15+cuda11.cudnn805 \
-f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html  \
&& mkdir -p /opt/conda/lib/python3.7/site-packages  \
&&  cd /opt/conda/lib/python3.7/site-packages  \
&& patch -p0 < /app/alphafold/docker/openmm.patch  \
&& apt-get -y --allow-change-held-packages purge cmake build-essential cuda-command-line-tools-${CUDA_V1}-${CUDA_V2}  \
libcudnn8  libcublas-${CUDA_V1}-${CUDA_V2} libcufft-${CUDA_V1}-${CUDA_V2}  \
libcusparse-${CUDA_V1}-${CUDA_V2} libnpp-${CUDA_V1}-${CUDA_V2} libnccl2 \
&& apt-get -y  autoremove\
&& apt update \
&& apt-get -y install libgomp1:amd64 libcusolver-${CUDA_V1}-${CUDA_V2} cuda-nvcc-${CUDA_V1}-${CUDA_V2}  \
&& apt-get clean \
&& echo '/opt/conda size' `du -sh /opt/conda` \
&& dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100  \
&& chmod u+s /sbin/ldconfig.real

# We need to run `ldconfig` first to ensure GPUs are visible, due to some quirk
# with Debian. See https://github.com/NVIDIA/nvidia-docker/issues/1399 for
# details.
# ENTRYPOINT does not support easily running multiple commands, so instead we
# write a shell script to wrap them up.
mkdir -p /app/alphafold
cd /app/alphafold
#patch to set the env variables ALPHAFOLD_HHBLITS_N_CPU (default:4) and  ALPHAFOLD_JACKHMMER_N_CPU (default:8)
# https://github.com/deepmind/alphafold/issues/110
wget https://raw.githubusercontent.com/easybuilders/easybuild-easyconfigs/92d2265fe8b84562e03705c872a97a4823ee25ba/easybuild/easyconfigs/a/AlphaFold/AlphaFold-2.0.0_n-cpu.patch
patch -p1 < AlphaFold-2.0.0_n-cpu.patch
echo '#!/bin/bash\n\
#ldconfig\n\
python /app/alphafold/run_alphafold.py "$@"' > /app/run_alphafold.sh \
&& chmod +x /app/run_alphafold.sh
%environment
export PATH="/opt/conda/bin:$PATH"
%runscript
cd /app/alphafold
exec /app/run_alphafold.sh "$@"
%startscript
cd /app/alphafold
exec /app/run_alphafold.sh "$@"
